Index: Proyecto_Final/src/main/java/module-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>module co.edu.uniquindio.proyecto_final.proyecto_final {\r\n    requires javafx.controls;\r\n    requires javafx.fxml;\r\n    requires org.mapstruct;\r\n\r\n\r\n    opens co.edu.uniquindio.proyecto_final.proyecto_final to javafx.fxml;\r\n    exports co.edu.uniquindio.proyecto_final.proyecto_final;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Proyecto_Final/src/main/java/module-info.java b/Proyecto_Final/src/main/java/module-info.java
--- a/Proyecto_Final/src/main/java/module-info.java	
+++ b/Proyecto_Final/src/main/java/module-info.java	
@@ -3,7 +3,6 @@
     requires javafx.fxml;
     requires org.mapstruct;
 
-
     opens co.edu.uniquindio.proyecto_final.proyecto_final to javafx.fxml;
     exports co.edu.uniquindio.proyecto_final.proyecto_final;
-}
\ No newline at end of file
+}
Index: Proyecto_Final/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n  <modelVersion>4.0.0</modelVersion>\r\n\r\n  <groupId>co.edu.uniquindio.Proyecto_FInal</groupId>\r\n  <artifactId>Proyecto_Final</artifactId>\r\n  <version>1.0-SNAPSHOT</version>\r\n  <name>Proyecto_Final</name>\r\n\r\n  <properties>\r\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n<junit.version>5.10.0</junit.version>  </properties>\r\n\r\n  <dependencies>\r\n    <dependency>\r\n      <groupId>org.openjfx</groupId>\r\n      <artifactId>javafx-controls</artifactId>\r\n      <version>17.0.6</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.openjfx</groupId>\r\n      <artifactId>javafx-fxml</artifactId>\r\n      <version>17.0.6</version>\r\n    </dependency>\r\n\r\n<dependency>\r\n      <groupId>org.junit.jupiter</groupId>\r\n      <artifactId>junit-jupiter-api</artifactId>\r\n      <version>${junit.version}</version>\r\n      <scope>test</scope>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.junit.jupiter</groupId>\r\n      <artifactId>junit-jupiter-engine</artifactId>\r\n      <version>${junit.version}</version>\r\n      <scope>test</scope>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.mapstruct</groupId>\r\n      <artifactId>mapstruct</artifactId>\r\n      <version>1.5.5.Final</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.mapstruct</groupId>\r\n      <artifactId>mapstruct-processor</artifactId>\r\n      <version>1.5.5.Final</version>\r\n    </dependency>\r\n  </dependencies>\r\n\r\n  <build>\r\n    <plugins>\r\n      <plugin>\r\n        <groupId>org.apache.maven.plugins</groupId>\r\n        <artifactId>maven-compiler-plugin</artifactId>\r\n        <version>3.11.0</version>\r\n        <configuration>\r\n          <source>17</source>\r\n          <target>17</target>\r\n        </configuration>\r\n      </plugin>\r\n      <plugin>\r\n        <groupId>org.openjfx</groupId>\r\n        <artifactId>javafx-maven-plugin</artifactId>\r\n        <version>0.0.8</version>\r\n        <executions>\r\n          <execution>\r\n            <!-- Default configuration for running with: mvn clean javafx:run -->\r\n            <id>default-cli</id>\r\n            <configuration>\r\n              <mainClass>co.edu.uniquindio.proyecto_final.proyecto_final/co.edu.uniquindio.proyecto_final.proyecto_final.HelloApplication</mainClass>\r\n              <launcher>app</launcher>\r\n              <jlinkZipName>app</jlinkZipName>\r\n              <jlinkImageName>app</jlinkImageName>\r\n              <noManPages>true</noManPages>\r\n              <stripDebug>true</stripDebug>\r\n              <noHeaderFiles>true</noHeaderFiles>\r\n            </configuration>\r\n          </execution>\r\n        </executions>\r\n      </plugin>\r\n    </plugins>\r\n  </build>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Proyecto_Final/pom.xml b/Proyecto_Final/pom.xml
--- a/Proyecto_Final/pom.xml	
+++ b/Proyecto_Final/pom.xml	
@@ -69,7 +69,7 @@
             <!-- Default configuration for running with: mvn clean javafx:run -->
             <id>default-cli</id>
             <configuration>
-              <mainClass>co.edu.uniquindio.proyecto_final.proyecto_final/co.edu.uniquindio.proyecto_final.proyecto_final.HelloApplication</mainClass>
+              <mainClass>co.edu.uniquindio.proyecto_final.proyecto_final.BancoApplication</mainClass>
               <launcher>app</launcher>
               <jlinkZipName>app</jlinkZipName>
               <jlinkImageName>app</jlinkImageName>
Index: Proyecto_Final/src/main/java/co/edu/uniquindio/proyecto_final/proyecto_final/Mapping/Dto/UsuarioDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package co.edu.uniquindio.proyecto_final.proyecto_final.Mapping.Dto;\r\n\r\nimport java.util.List;\r\n\r\npublic record UsuarioDto(\r\n    int id,\r\n    String nombre,\r\n    String correo,\r\n    List<ReservaDto> reservaDtoList){\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Proyecto_Final/src/main/java/co/edu/uniquindio/proyecto_final/proyecto_final/Mapping/Dto/UsuarioDto.java b/Proyecto_Final/src/main/java/co/edu/uniquindio/proyecto_final/proyecto_final/Mapping/Dto/UsuarioDto.java
--- a/Proyecto_Final/src/main/java/co/edu/uniquindio/proyecto_final/proyecto_final/Mapping/Dto/UsuarioDto.java	
+++ b/Proyecto_Final/src/main/java/co/edu/uniquindio/proyecto_final/proyecto_final/Mapping/Dto/UsuarioDto.java	
@@ -3,8 +3,8 @@
 import java.util.List;
 
 public record UsuarioDto(
-    int id,
-    String nombre,
-    String correo,
-    List<ReservaDto> reservaDtoList){
+        String id,
+        String nombre,
+        String correo,
+        List<ReservaDto> reservaDtoList){
 }
Index: Proyecto_Final/src/main/java/co/edu/uniquindio/proyecto_final/proyecto_final/Controller/ModelFactoryController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package co.edu.uniquindio.proyecto_final.proyecto_final.Controller;\r\n\r\nimport co.edu.uniquindio.proyecto_final.proyecto_final.Controller.Service.IModelFactoryService;\r\nimport co.edu.uniquindio.proyecto_final.proyecto_final.Exceptions.UsuarioException;\r\nimport co.edu.uniquindio.proyecto_final.proyecto_final.Mapping.Dto.UsuarioDto;\r\nimport co.edu.uniquindio.proyecto_final.proyecto_final.Mapping.Mappers.SgreMapper;\r\nimport co.edu.uniquindio.proyecto_final.proyecto_final.Model.Sgre;\r\nimport co.edu.uniquindio.proyecto_final.proyecto_final.Model.Usuario;\r\nimport co.edu.uniquindio.proyecto_final.proyecto_final.Utils.SgreUtils;\r\n\r\nimport java.util.List;\r\n\r\npublic class ModelFactoryController implements IModelFactoryService {\r\n    Sgre sgre;\r\n    SgreMapper mapper = SgreMapper.INSTANCE;\r\n\r\n    public static class SingletonHolder{\r\n        private final static ModelFactoryController eINSTANCE = new ModelFactoryController();\r\n    }\r\n    public static ModelFactoryController getInstance() {\r\n        return SingletonHolder.eINSTANCE;\r\n    }\r\n\r\n    public ModelFactoryController() {\r\n        System.out.println(\"invocaci√≥n clase singleton\");\r\n        cargarDatosBase();\r\n    }\r\n\r\n    private void cargarDatosBase() {\r\n        sgre = SgreUtils.InicializarDatos();\r\n    }\r\n\r\n    public Sgre getSgre() {\r\n        return sgre;\r\n    }\r\n\r\n    public void setSgre(Sgre sgre) {\r\n        this.sgre = sgre;\r\n    }\r\n\r\n    @Override\r\n    public List<UsuarioDto> obtenerUsuarios() {\r\n        return mapper.getUsuarioDto(sgre.getUsuarios());\r\n    }\r\n\r\n    @Override\r\n    public boolean agregarUsuario(UsuarioDto usuarioDto) {\r\n        try {\r\n            if (!sgre.verificarUsuario(usuarioDto.id())){\r\n                Usuario usuario= mapper.usuarioDtotoToUsuario(usuarioDto);\r\n                getSgre().agregarUsuario(usuario);\r\n            }\r\n            return true;\r\n        }catch (UsuarioException e){\r\n            e.getMessage();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean eliminarUsuario(int id) {\r\n        boolean flagExiste = false;\r\n        try {\r\n            flagExiste = getSgre().eliminarUsuario(id);\r\n        } catch (UsuarioException e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n        }\r\n        return flagExiste;\r\n    }\r\n    @Override\r\n    public boolean actualizarUsuario(int id, UsuarioDto usuarioDto) {\r\n        try {\r\n            Usuario usuario = mapper.usuarioDtotoToUsuario(usuarioDto);\r\n            getSgre().actualizarUsuario(id,usuario);\r\n            return true;\r\n        } catch (UsuarioException e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Proyecto_Final/src/main/java/co/edu/uniquindio/proyecto_final/proyecto_final/Controller/ModelFactoryController.java b/Proyecto_Final/src/main/java/co/edu/uniquindio/proyecto_final/proyecto_final/Controller/ModelFactoryController.java
--- a/Proyecto_Final/src/main/java/co/edu/uniquindio/proyecto_final/proyecto_final/Controller/ModelFactoryController.java	
+++ b/Proyecto_Final/src/main/java/co/edu/uniquindio/proyecto_final/proyecto_final/Controller/ModelFactoryController.java	
@@ -46,7 +46,7 @@
     @Override
     public boolean agregarUsuario(UsuarioDto usuarioDto) {
         try {
-            if (!sgre.verificarUsuario(usuarioDto.id())){
+            if (!sgre.verificarUsuario(Integer.parseInt(usuarioDto.id()))){
                 Usuario usuario= mapper.usuarioDtotoToUsuario(usuarioDto);
                 getSgre().agregarUsuario(usuario);
             }
