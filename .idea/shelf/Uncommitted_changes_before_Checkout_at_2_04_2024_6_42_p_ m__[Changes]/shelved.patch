Index: Proyecto_Final/src/main/java/co/edu/uniquindio/proyecto_final/proyecto_final/Mapping/Dto/EmpleadoDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package co.edu.uniquindio.proyecto_final.proyecto_final.Mapping.Dto;\r\n\r\nimport java.util.List;\r\n\r\npublic record EmpleadoDto(\r\n        String id,\r\n    String nombre,\r\n    String correo,\r\n    List<EventoDto> eventoDtoList\r\n) {}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Proyecto_Final/src/main/java/co/edu/uniquindio/proyecto_final/proyecto_final/Mapping/Dto/EmpleadoDto.java b/Proyecto_Final/src/main/java/co/edu/uniquindio/proyecto_final/proyecto_final/Mapping/Dto/EmpleadoDto.java
--- a/Proyecto_Final/src/main/java/co/edu/uniquindio/proyecto_final/proyecto_final/Mapping/Dto/EmpleadoDto.java	(revision 9bed45d0281591b8618bb6544390592638ca4bad)
+++ b/Proyecto_Final/src/main/java/co/edu/uniquindio/proyecto_final/proyecto_final/Mapping/Dto/EmpleadoDto.java	(date 1712090541391)
@@ -3,8 +3,8 @@
 import java.util.List;
 
 public record EmpleadoDto(
-        String id,
-    String nombre,
-    String correo,
-    List<EventoDto> eventoDtoList
-) {}
+        String cedula,
+        String nombre,
+        String correo,
+        List<EventoDto> eventoDtoList){
+}
Index: Proyecto_Final/src/main/java/co/edu/uniquindio/proyecto_final/proyecto_final/ViewController/UsuarioViewController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package co.edu.uniquindio.proyecto_final.proyecto_final.ViewController;\r\n\r\nimport co.edu.uniquindio.proyecto_final.proyecto_final.Controller.UsuarioController;\r\nimport co.edu.uniquindio.proyecto_final.proyecto_final.Mapping.Dto.EmpleadoDto;\r\nimport co.edu.uniquindio.proyecto_final.proyecto_final.Mapping.Dto.UsuarioDto;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.scene.control.Alert;\r\nimport javafx.scene.control.ButtonType;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Optional;\r\n\r\npublic class UsuarioViewController {\r\n    UsuarioController usuarioControllerService;\r\n    ObservableList<UsuarioDto> listaUsuarioDtos = FXCollections.observableArrayList();\r\n    UsuarioDto usuarioSeleccionado;\r\n\r\n    private void obtenerUsuarios() {\r\n        listaUsuarioDtos.addAll(usuarioControllerService.obtenerUsuarios());\r\n    }\r\n    private void creaUsuario() {\r\n        //1. Capturar los datos\r\n        UsuarioDto usuarioDto= construirUsuarioDto();\r\n        //2. Validar la información\r\n        if(datosValidos(usuarioDto)){\r\n            if(usuarioControllerService.agregarUsuario(usuarioDto)){\r\n                listaUsuarioDtos.add(usuarioDto);\r\n                mostrarMensaje(\"Notificación usuario\", \"usuario creado\", \"El usuario se ha creado con éxito\", Alert.AlertType.INFORMATION);\r\n                limpiarCamposEmpleado();\r\n            }else{\r\n                mostrarMensaje(\"Notificación usuario\", \"usuario no creado\", \"El usuario no se ha creado con éxito\", Alert.AlertType.ERROR);\r\n            }\r\n        }else{\r\n            mostrarMensaje(\"Notificación usuario\", \"usuario no creado\", \"Los datos ingresados son invalidos\", Alert.AlertType.ERROR);\r\n        }\r\n\r\n    }\r\n    private  void eliminarUsuario(){}\r\n    private  void actualizarUsuario(){}\r\n\r\n    private UsuarioDto construirUsuarioDto() {\r\n        return new UsuarioDto(\"123\",\"martin\",\"\",new ArrayList<>());\r\n    }\r\n    private void limpiarCamposEmpleado() {\r\n    }\r\n    private boolean datosValidos(UsuarioDto usuarioDto){\r\n        String mensaje=\"\";\r\n        if (usuarioDto.id() ==null || usuarioDto.id().equals(\"\")){\r\n            mensaje += \"El id es invalido \\n\" ;\r\n        }if (usuarioDto.nombre()==null || usuarioDto.nombre().equals(\"\")){\r\n            mensaje += \"El nombre es invalido \\n\" ;\r\n        }if (usuarioDto.correo()==null || usuarioDto.correo().equals(\"\")){\r\n            mensaje += \"El correo es invalido \\n\" ;\r\n        }if (mensaje.equals(\"\")){\r\n            return true;\r\n        }else{\r\n            mostrarMensaje(\"Notificación cliente\",\"Datos invalidos\",mensaje, Alert.AlertType.WARNING);\r\n            return false;\r\n        }\r\n    }\r\n    private void mostrarMensaje(String titulo, String header, String contenido, Alert.AlertType alertType) {\r\n        Alert aler = new Alert(alertType);\r\n        aler.setTitle(titulo);\r\n        aler.setHeaderText(header);\r\n        aler.setContentText(contenido);\r\n        aler.showAndWait();\r\n    }\r\n    private boolean mostrarMensajeConfirmacion(String mensaje) {\r\n        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\r\n        alert.setHeaderText(null);\r\n        alert.setTitle(\"Confirmación\");\r\n        alert.setContentText(mensaje);\r\n        Optional<ButtonType> action = alert.showAndWait();\r\n        if (action.get() == ButtonType.OK) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Proyecto_Final/src/main/java/co/edu/uniquindio/proyecto_final/proyecto_final/ViewController/UsuarioViewController.java b/Proyecto_Final/src/main/java/co/edu/uniquindio/proyecto_final/proyecto_final/ViewController/UsuarioViewController.java
--- a/Proyecto_Final/src/main/java/co/edu/uniquindio/proyecto_final/proyecto_final/ViewController/UsuarioViewController.java	(revision 9bed45d0281591b8618bb6544390592638ca4bad)
+++ b/Proyecto_Final/src/main/java/co/edu/uniquindio/proyecto_final/proyecto_final/ViewController/UsuarioViewController.java	(date 1712101289386)
@@ -36,8 +36,12 @@
         }
 
     }
-    private  void eliminarUsuario(){}
-    private  void actualizarUsuario(){}
+    private  void eliminarUsuario(){
+
+    }
+    private  void actualizarUsuario(){
+        
+    }
 
     private UsuarioDto construirUsuarioDto() {
         return new UsuarioDto("123","martin","",new ArrayList<>());
